<?php

include_once('bbcom_content.features.inc');

/*
 * Implementation of hook_flag_default_flags().
 */
function bbcom_content_flag_default_flags() {
  $flags = array();
  $flags[] = array(
    'content_type' => 'node',
    'name' => 'verified',
    'title' => 'Verified',
    'global' => FALSE,
    'types' => array('entry'),
    'flag_short' => 'Mark as verified',
    'flag_long' => '',
    'flag_message' => '',
    'unflag_short' => 'Unmark as verified',
    'unflag_long' => '',
    'unflag_message' => '',
    'show_on_page' => TRUE,
    'show_on_teaser' => TRUE,
    'show_on_form' => TRUE,
    'roles' => array(3,4,6),
    'link_type' => 'toggle',
    'i18n' => '0',
    // enabled by default
    'status' => TRUE,
  );
  return $flags;
}

/*
 * Implementation of hook_nodeapi().
 */
function bbcom_content_nodeapi(&$node, $op, $a3=NULL, $a4=NULL) {
  if ($node->type == lingwo_korpus_text_content_type() && $op == 'view') {
    drupal_add_js(drupal_get_path('module', 'flag') .'/theme/flag.js');
    drupal_add_css(drupal_get_path('module', 'flag') .'/theme/flag.css');
  }
}

/**
 * Implementation of hook_block().
 */
function bbcom_content_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      $blocks[0] = array(
        'info' => t('BiblioBird.com Content: Add Content Block'),
      );
      return $blocks;

    case 'view':
      if ($delta == 0 && user_access('create content content')) {
        $block['content'] = l(t('Create Content'), 'node/add/content',
          array('attributes' => array('id' => 'create-content-link')));
        return $block;
      }
      break; 
  }
}

/*
 * Implementation of hook_form_alter().
 */
function bbcom_content_form_alter(&$form, $form_state, $form_id) {
  if ($form_state['view']->name == 'search_content') {
    $form['submit']['#value'] = t('Search');
  }
}



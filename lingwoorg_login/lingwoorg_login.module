<?php
// $Id$

/**
 * @file
 * Customize login for our needs
 */

require_once(drupal_get_path('module', 'lingwoorg_login') .'/base32.php');

/**
 * Implementation of hook_init().
 */
function lingwoorg_login_init() {
  global $user;

  $validating_id = logintoboggan_validating_id();
  // bail early if the $validating_id is set to a core id
  if (in_array($validating_id, array(DRUPAL_ANONYMOUS_RID, DRUPAL_AUTHENTICATED_RID)))
    return;

  // we show this message every time an unvalidated user visits a page that isn't user/%/edit 
  // or one of the magic toboggan pages.
  if (isset($user->roles[$validating_id]) && !(arg(0) == 'user' && arg(2) == 'edit') && arg(0) != 'toboggan') {
    if ($purge_interval = variable_get('logintoboggan_purge_unvalidated_user_interval', 0)) {
      // only show after the user has been a user for atleast one minute
      if (time() - $user->created > 60) {
        $purge_time = ($user->created + $purge_interval) - time();
        $purge_days = ceil($purge_time / 86400);
        if ($purge_days > 1) {
          $purge_message = t("If you don't validate your account, after %days days your account will be deleted.", array('%days' => $purge_days));
        }
        else {
          $purge_hours = ceil($purge_time / 3600);
          $purge_message = t("If you don't validate your account, in %hours hours your account will be deleted!", array('%hours' => $purge_hours));
        }
        drupal_set_message(t("You still haven't validated your account!  Check your inbox for the validation e-mail and click the link given."));
        drupal_set_message(t("!purge-message  <a href=\"@user-edit\">Make sure</a> you entered the correct e-mail address or <a href=\"@resend-email\">re-send</a> the validation e-mail", array('!purge-message' => $purge_message, '@user-edit' => url('user/'. $user->uid .'/edit'), '@resend-email' => url('toboggan/revalidate/'. $user->uid))));
      }
    }
  }
}

/**
 * Implementation of hook_menu().
 */
function lingwoorg_login_menu() {
  $items = array();

  // Lists of batches
  $items['admin/user/reg_codes'] = array(
    'title' => 'Registration Codes',
    'description' => 'Create/list registration codes',
    'access arguments' => array('administer site configuration'),
    'page callback' => 'lingwoorg_login_batches_list',
    'file' => 'lingwoorg_login.admin.inc',
    'type' => MENU_NORMAL_ITEM
  );
  $items['admin/user/reg_codes/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/user/reg_codes/add'] = array(
    'title' => 'Create new batch',
    'description' => 'Create a new batch of registration codes',
    'access arguments' => array('administer site configuration'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('lingwoorg_login_batches_add'),
    'file' => 'lingwoorg_login.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );

  // Individual batches
  $items['admin/user/reg_codes/%'] = array(
    'title' => 'Batch',
    'description' => 'See the registration codes in a batch',
    'access arguments' => array('administer site configuration'),
    'page callback' => 'lingwoorg_login_batch_view',
    'page arguments' => array(3),
    'file' => 'lingwoorg_login.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/user/reg_codes/%/view'] = array(
    'title' => 'View',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/user/reg_codes/%/print'] = array(
    'title' => 'Print',
    'description' => 'Print a cards to distribute.',
    'access arguments' => array('administer site configuration'),
    'page callback' => 'lingwoorg_login_batch_print',
    'page arguments' => array(3),
    'file' => 'lingwoorg_login.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implemantation of hook_theme().
 */
function lingwoorg_login_theme() {
  return array(
    'lingwoorg_login_registration_page' => array(
      'arguments' => array('batch' => NULL, 'content' => NULL),
      'template' => 'lingwoorg-login-registration-page',
      'file' => 'lingwoorg_login.admin.inc',
    ),
    'lingwoorg_login_registration_sheet' => array(
      'arguments' => array('batch' => NULL, 'codes' => NULL),
      'file' => 'lingwoorg_login.admin.inc',
    ),
    'lingwoorg_login_registration_card' => array(
      'arguments' => array('batch' => NULL, 'code' => NULL),
      'file' => 'lingwoorg_login.admin.inc',
    ),
  );
}

/**
 * Implemantation of hook_menu_alter().
 */
function lingwoorg_login_menu_alter(&$items) {
  // Rename 'User Account' to user login
  $items['user']['title'] = t('User Login');
  // Move the 'Login' tab to the front
  $items['user/login']['weight'] = -10;
}

/*
 * Implementation of hook_form_alter().
 */
function lingwoorg_login_form_alter(&$form, &$form_state, $form_id) {
  global $language;

  // if you can administer users, then you don't need to enter a registration code
  //if ($form_id == 'user_register' && !user_access('administer users')) {
  if ($form_id == 'user_register') {
    /*
    $form['registration_code'] = array(
      '#title' => t('Registration Code'),
      '#type' => 'textfield',
      '#required' => TRUE,
      '#description' => t('Format: <em>XXXX-XX-XXXX</em>. You should have received this number from your teacher.'),
    );
    */

    // user's language will be set to whatever the current language is
    $form['language'] = array(
      '#type' => 'hidden',
      '#value' => $language->language,
    );

    //$form['#validate'][] = 'lingwoorg_login_user_register_validate';
    //$form['#submit'][] = 'lingwoorg_login_user_register_submit';
  }
  elseif ($form_id == 'user_login') {
    //$form['#submit'][] = 'lingwoorg_login_user_login_submit';
  }
}

function lingwoorg_login_user_login_submit($form, &$form_state) {
  // should take us to the front page.. I hope.
  $_REQUEST['destination'] = variable_get('site_frontpage', 'node');
}

function lingwoorg_login_user_register_validate($form, &$form_state) {
  if (!lingwoorg_login_check_code($form_state['values']['registration_code'])) {
    form_set_error('registration_code', t('Invalid registration code.'));
  }
}

function lingwoorg_login_user_register_submit($form, &$form_state) {
  list($batch_id, $seed, $code) = lingwoorg_login_parse_code($form_state['values']['registration_code']);

  db_query("UPDATE {lingwoorg_login_reg_code} SET uid = %d WHERE batch_id = %d AND code = '%s'",
    $form_state['user']->uid, $batch_id, $code);
}

/*
 * Implements hook_fb().
 */
function lingwoorg_login_fb($op, $data=NULL, $return=NULL) {
  if ($op == 'post init') {
    // if there is no destination set, then we redirect to the front page!
    if (empty($_REQUEST['destination'])) {
      fb_js_settings('reload_url', url('<front>', array('absolute' => TRUE)));
    }
  }
}

/*
 * API functions
 */

function lingwoorg_login_make_code($batch_id, $seed, $code) {
  $base32 = new Base32();

  $batch_id = $base32->fromDec($batch_id, 2);

  return $seed[0] . $seed[1] . $batch_id[1] . $batch_id[0] .'-'.
         $code[2] . $code[3]                               .'-'.
         $seed[2] . $seed[3] . $code[0]     . $code[1];
}

function lingwoorg_login_parse_code($full_code) {
  $full_code = str_replace('-', '', $full_code);

  $base32 = new Base32();
  $batch_id = $base32->fromDec($full_code[3] . $full_code[2]);
  $seed = $full_code[0] . $full_code[1] . $full_code[6] . $full_code[7];
  $code = $full_code[8] . $full_code[9] . $full_code[4] . $full_code[5];

  return array($batch_id, $seed, $code);
}

function lingwoorg_login_check_code($full_code) {
  $full_code = str_replace('-', '', $full_code);
  if (strlen($full_code) != 10) {
    return FALSE;
  }

  list($batch_id, $seed, $code) = lingwoorg_login_parse_code($full_code);

  $batch = db_fetch_object(db_query("SELECT seed, expires FROM {lingwoorg_login_reg_batch} WHERE batch_id = %d", $batch_id));

  // check that the batch exists, hasn't expired and we were given a valid seed
  if (!$batch || $batch->expires < time() || $batch->seed != $seed) {
    return FALSE;
  }

  $code_obj = db_fetch_object(db_query("SELECT uid FROM {lingwoorg_login_reg_code} WHERE batch_id = %d AND code = '%s'", $batch_id, $code));

  // check that this is a valid and unused code on this the batch
  if (!$code_obj || !empty($code_obj->uid)) {
    return FALSE;
  }

  return TRUE;
}


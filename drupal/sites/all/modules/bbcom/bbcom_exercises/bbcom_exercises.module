<?php

include_once('bbcom_exercises.features.inc');

/**
 * Implementation of hook_menu_alter().
 */
function bbcom_exercises_menu_alter(&$items) {
  // make the node/add/% menu for all the question types a callback, so they don't
  // clutter up the 'Create content' menu.
  $quiz_question_types = array_keys(_quiz_get_question_types());
  foreach ($quiz_question_types as $type) {
    $menu_name = 'node/add/' . str_replace('_', '-', $type);
    if (isset($items[$menu_name])) {
      $items[$menu_name]['type'] = MENU_CALLBACK;
    }
  }

  // TODO: this should probably be a patch to the 'quiz' module.
  // In the e-mail sent to the author of a quiz when a user completes it, a link to 
  // user/quiz/%/userresults is sent - for admins, we're going to redirect this to
  // the page to evaluate their result.
  $items['user/quiz/%/userresults']['access callback'] = '_bbcom_exercises_quiz_userresults_access';
  $items['user/quiz/%/userresults']['page callback'] = '_bbcom_exercises_quiz_userresults_page';
}

function _bbcom_exercises_quiz_userresults_access($rid) {
  return user_access('view any quiz results') || quiz_access_my_result($rid);
}

function _bbcom_exercises_quiz_userresults_page($rid) {
  global $user;

  if (user_access('view any quiz results')) {
    $sql = 'SELECT qnp.nid, qnp.vid, qnrs.uid
      FROM {quiz_node_properties} qnp
      INNER JOIN {quiz_node_results} qnrs ON qnrs.vid = qnp.vid
      WHERE qnrs.result_id = %d';
    $result = db_fetch_object(db_query($sql, $rid));

    if ($result->uid != $user->uid) {
      return drupal_goto("node/{$result->nid}/results/{$rid}");
    }
  }

  return quiz_user_results($rid);
}

/**
 * Implementation of hook_form_quiz_questions_form_alter().
 */
function bbcom_exercises_form_quiz_questions_form_alter(&$form, &$form_state) {
  // TODO: add some hooks to 'quiz' to allow us to filter what is in the browser, rather than
  // removing it entirely.

  // disable the question browser - we want questions to only exist on a single quiz
  $form['question_list']['browser']['#access'] = FALSE;
  if (isset($form['question_list']['no_questions'])) {
    $form['question_list']['no_questions']['#value'] = '<div id = "no-questions">'. t('There are currently no questions in this quiz. Use the links above to create new questions.') .'</div>';
  }

  // disable the ability to remove a question from a quiz - you have to delete the node
  foreach ($form['question_list']['stayers'] as $id => &$element) {
    $element['#access'] = FALSE;
  }
}

/**
 * Implementation of hook_form_quiz_question_answering_form_alter().
 */
function bbcom_exercises_form_quiz_question_answering_form_alter(&$form, &$form_state) {
  if ($form['#theme'] == 'long_answer_answering_form') {
    $form['question']['#value'] .= '<p><em>' . t('Please limit your answer to 250 words.') . '</em></p>';
  }
}


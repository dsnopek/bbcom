<?php

/**
 * Implementation of hook_menu().
 */
function bbcom_metrics_menu() {
  $items = array();
  $items['admin/settings/bbcom/metrics'] = array(
    'title' => 'Metrics',
    'description' => 'Settings for BiblioBird.com Metrics module.',
    'access arguments' => array('administer site configuration'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bbcom_metrics_admin_settings'),
    'file' => 'bbcom_metrics.admin.inc',
  );

  return $items;
}

/**
 * Implementation of hook_block().
 */
function bbcom_metrics_block($op = 'list', $delta = 0, $edit = array()) {
  if ($op == 'list') {
    return array(
      'mixpanel_badge' => array(
        'info' => t('Bibliobird Metrics: Mixpanel badge'),
        'cache' => BLOCK_CACHE_GLOBAL,
        'region' => 'footer',
        'status' => 1,
      ),
    );
  }
  elseif ($op == 'view' && $delta == 'mixpanel_badge') {
    return array(
      'subject' => NULL,
      'content' => '<a href="http://mixpanel.com/f/partner"><img src="http://mixpanel.com/site_media/images/partner/badge_blue.png" alt="Real Time Web Analytics" /></a>',
    );
  }
}

// Merge a new command into the list of commands that will be run on page load
function _bbcom_metrics_mp($func = NULL, $args = array()) {
  drupal_add_js(array(
    'bbcom_metrics' => array(
      'commands' => array(array($func, $args))
    )
  ), 'setting');
}

/**
 * Tracks an event with the given properties.
 */
function bbcom_metrics_track($event, $properties = array()) {
  _bbcom_metrics_mp('track', array($event, $properties));
}

/**
 * Sets some 'super properties' which get applied to all events for this user.
 */
function bbcom_metrics_set_user_properties($properties, $once = FALSE) {
  _bbcom_metrics_mp($once ? 'register_once' : 'register', array($properties));
}

/**
 * Implementation of hook_init().
 */
function bbcom_metrics_init() {
  global $user;

  if ($mixpanel_token = variable_get('bbcom_metrics_mixpanel_token', '')) {
    $info = array(
      'mixpanel_token' => $mixpanel_token,
      'commands'       => array(),
    );

    // make sure the commands identifying the user come first
    if (!empty($user->uid)) {
      $info['commands'][] = array('identify', array((string)$user->uid));
      $info['commands'][] = array('name_tag', array($user->name));
    }

    drupal_add_js(array('bbcom_metrics' => $info), 'setting');
    drupal_add_js(drupal_get_path('module', 'bbcom_metrics') . '/bbcom_metrics.js');
    // make sure this is run as early as possible
    drupal_add_js('bbcom_metrics_init();', 'inline');
  }
}

/**
 * Implementation of hook_user().
 */
function bbcom_metrics_user($op, &$edit, &$account, $category = NULL) {
  if ($op == 'logout') {
    // clear the old mixpanel properties
    setcookie('mp_super_properties', '', time() - (86400 * 2));
  }
}


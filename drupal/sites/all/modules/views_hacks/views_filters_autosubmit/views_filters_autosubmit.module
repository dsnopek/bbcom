<?php
// $Id: views_filters_autosubmit.module,v 1.1.2.4 2010/06/23 06:34:26 kratib Exp $

define('VFA_VISIBILITY_PAGES_EXCEPT', 0);
define('VFA_VISIBILITY_PAGES', 1);
define('VFA_VISIBILITY_PHP', 2);

/**
 * Implementation of hook_form_FORMID_alter() for views_exposed_form.
 */
function views_filters_autosubmit_form_views_exposed_form_alter(&$form, &$form_state) {
  // Evaluate visibility first.
  $pages = variable_get('views_filters_autosubmit_pages', '');
  $visibility = variable_get('views_filters_autosubmit_visibility', VFA_VISIBILITY_PAGES);
  if ($pages) {
    if ($visibility < VFA_VISIBILITY_PHP) {
      if (variable_get('views_filters_autosubmit_views', FALSE)) {
        $views = explode("\n", str_replace("\r", '', $pages));
        $page_match = in_array($form_state['view']->name, $views);
      }
      else {
        $path = drupal_get_path_alias($_GET['q']);
        $page_match = drupal_match_path($path, $pages);
        if ($path != $_GET['q']) {
          $page_match = $page_match || drupal_match_path($_GET['q'], $pages);
        }
      }
      $page_match = !($visibility xor $page_match);
    }
    else {
      $page_match = drupal_eval($pages);
    }
  }
  else {
    $page_match = !$visibility;
  }
  if (!$page_match) return;

  // Inject the necessary Javascript.
  static $once = FALSE;
  if (!$once) { // We sometimes get called twice. TODO: why? 
    $exceptions = module_invoke_all('views_filters_autosubmit_exceptions', $form);
    drupal_add_js(array('vfas' => array('form_id' => $form['#id'], 'submit_id' => $form['submit']['#id'], 'exceptions' => implode(',', $exceptions))), 'setting');
    drupal_add_js(drupal_get_path('module', 'views_filters_autosubmit') . '/views_filters_autosubmit.js');
  }
  $once = TRUE;
}

/**
 * Implementation of hook_views_filters_autosubmit_exceptions().
 */
function views_filters_autosubmit_views_filters_autosubmit_exceptions($form) {
  foreach (element_children($form) as $child) {
    // Find filters that have min and max value: disable auto-submit on min.
    if (isset($form[$child]['min']) && isset($form[$child]['max'])) {
      $exceptions[] = '#edit-' . str_replace('_', '-', $child) . '-min';
    }
  }
  return $exceptions;
}

/**
 * Implementation of hook_menu().
 */
function views_filters_autosubmit_menu() {
  $items['admin/settings/views_filters_autosubmit'] = array(
    'title' => 'Views Filters Auto-submit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('views_filters_autosubmit_settings'),
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

function views_filters_autosubmit_settings() {
  $form['views_filters_autosubmit_visibility'] = array(
    '#type' => 'radios',
    '#title' => t('Auto-submit on specific pages'),
    '#options' => array(
      VFA_VISIBILITY_PAGES_EXCEPT => t('Show on every page except the listed pages.'),
      VFA_VISIBILITY_PAGES => t('Show on only the listed pages.'),
      VFA_VISIBILITY_PHP => t('Show if the following PHP code returns <code>TRUE</code> (PHP-mode, experts only).'),
    ),
    '#default_value' => variable_get('views_filters_autosubmit_visibility', 1),
  );
  $form['views_filters_autosubmit_pages'] = array(
    '#type' => 'textarea',
    '#title' => t('Pages'),
    '#description' => t("Enter one page per line as Drupal paths. The '*' character is a wildcard. Example paths are %blog for the blog page and %blog-wildcard for every personal blog. %front is the front page.", array('%blog' => 'blog', '%blog-wildcard' => 'blog/*', '%front' => '<front>')) . ' '. t('If the PHP-mode is chosen, enter PHP code between %php. Note that executing incorrect PHP-code can break your Drupal site.', array('%php' => '<?php ?>')),
    '#default_value' => variable_get('views_filters_autosubmit_pages', ''),
  );
  $form['views_filters_autosubmit_views'] = array(
    '#type' => 'checkbox',
    '#title' => t('Views instead of pages'),
    '#description' => t('In the settings above, match against the view name instead of the page URL.'),
    '#default_value' => variable_get('views_filters_autosubmit_views', FALSE),
  );
  return system_settings_form($form);
}


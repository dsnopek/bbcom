<?php

include_once('lingwoorg_dictionary.features.inc');

/**
 * Implementation of hook_strongarm()
 */
function lingwoorg_dictionary_strongarm() {
  return array(
    /*
     * 'entry' content type
     */
    'node_options_entry' => array('status', 'revision'),
    // put the fields in the correct order
    'content_extra_weights_entry' => array(
      'language' => 0,
      'taxonomy' => 1,
      'title'    => 2,
      'menu'     => 3,
      // field_fields => 4
      // field_senses => 5
    ),
    // translation settings
    'language_content_type_entry' => TRANSLATION_ENABLED,
    'i18n_node_entry' => LANGUAGE_SUPPORT_NORMAL,

    // part of speech is translatable
    'i18ntaxonomy_vocabulary' => array(
      exportables_machine_load_id('taxonomy_vocabulary', 'pos') => I18N_TAXONOMY_LOCALIZE,
    ),

    // lingwo_dictionary variables
    'lingwo_dictionary_lookup_path' => 'dictionary/lookup',
    'lingwo_dictionary_entry_content_type' => 'entry',
    'lingwo_dictionary_pos_vocabulary' => exportables_machine_load_id('taxonomy_vocabulary', 'pos'),
  );
}

/**
 * Implementation of hook_theme().
 */
function lingwoorg_dictionary_theme() {
  return array(
    'lingwoorg_dictionary_entry_summary' => array(
      'arguments' => array('node' => NULL, 'teaser' => FALSE, 'page' => FALSE),
      'pattern' => 'lingwoorg_dictionary_entry_summary_',
    )
  );
}

function template_preprocess_lingwoorg_dictionary_entry_summary(&$vars, $hook) {
  $node = $vars['node'];

  // TODO: we need to get some "human" readable versions of the pos as well,
  // including the translations for other languages.
  $vars['pos'] = lingwo_dictionary_entry_get_pos($node);

  $translation_source = lingwo_dictionary_entry_load_translation_source($node);
  $vars['source_node'] = $translation_source ? $translation_source : $node;
  $vars['source_lang'] = $vars['source_node']->language;
  $vars['is_translation'] = lingwo_dictionary_entry_is_translation($node);

  // get the source fields (we always deal with the source fields, so this should be
  // no surprise and we can name it simply $fields).
  $field_fields = lingwo_data_settings('field_fields');
  $vars['fields'] = lingwo_fields_map_items($vars['source_node']->$field_fields);
}

function theme_lingwoorg_dictionary_entry_summary($node, $teaser=FALSE, $page=FALSE) {
  // TODO: is there some default that makes sense?
  return '';
}

/**
 * Implementation of hook_nodeapi().
 */
// Add entry summary information to the node view
function lingwoorg_dictionary_nodeapi(&$node, $op, $a3, $a4) {
  if ($op == 'view') {
    if ($node->type != lingwo_dictionary_settings('entry_content_type')) {
      return NULL;
    }

    // get the pos
    $pos = lingwo_dictionary_entry_get_pos($node);

    // get the source language
    $language = $node->language;
    if (lingwo_dictionary_entry_load_translation_source($node)) {
      $language = $node->translation_source->language;
    }

    $node->content['entry_summary'] = array(
      '#weight' => -50,
      '#value'  => theme(array(
        'lingwoorg_dictionary_entry_summary_'. $language .'_'. $pos,
        'lingwoorg_dictionary_entry_summary_'. $language,
        'lingwoorg_dictionary_entry_summary'
      ), $node, $a3, $a4)
    );
  }
}

